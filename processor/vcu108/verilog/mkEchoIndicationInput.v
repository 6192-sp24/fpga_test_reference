//
// Generated by Bluespec Compiler (build 7d25cde)
//
// timestamp removed
//
// BVI format method schedule info:
// schedule portalIfc_messageSize_size  CF ( portalIfc_messageSize_size,
// 					  portalIfc_requests_0_enq,
// 					  portalIfc_requests_0_notFull,
// 					  portalIfc_requests_1_enq,
// 					  portalIfc_requests_1_notFull,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel,
// 					  pipes_heard_PipeOut_first,
// 					  pipes_heard_PipeOut_deq,
// 					  pipes_heard_PipeOut_notEmpty,
// 					  pipes_heard2_PipeOut_first,
// 					  pipes_heard2_PipeOut_deq,
// 					  pipes_heard2_PipeOut_notEmpty );
//
// schedule portalIfc_requests_0_enq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_1_enq,
// 					portalIfc_requests_1_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_heard_PipeOut_first,
// 					pipes_heard2_PipeOut_first,
// 					pipes_heard2_PipeOut_deq,
// 					pipes_heard2_PipeOut_notEmpty );
// schedule portalIfc_requests_0_enq  SB ( pipes_heard_PipeOut_deq );
// schedule portalIfc_requests_0_enq  C ( portalIfc_requests_0_enq );
//
// schedule portalIfc_requests_0_notFull  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_enq,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_heard_PipeOut_first,
// 					    pipes_heard_PipeOut_notEmpty,
// 					    pipes_heard2_PipeOut_first,
// 					    pipes_heard2_PipeOut_deq,
// 					    pipes_heard2_PipeOut_notEmpty );
// schedule portalIfc_requests_0_notFull  SB ( portalIfc_requests_0_enq,
// 					    pipes_heard_PipeOut_deq );
//
// schedule portalIfc_requests_1_enq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_0_enq,
// 					portalIfc_requests_0_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_heard_PipeOut_first,
// 					pipes_heard_PipeOut_deq,
// 					pipes_heard_PipeOut_notEmpty,
// 					pipes_heard2_PipeOut_first );
// schedule portalIfc_requests_1_enq  SB ( pipes_heard2_PipeOut_deq );
// schedule portalIfc_requests_1_enq  C ( portalIfc_requests_1_enq );
//
// schedule portalIfc_requests_1_notFull  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_enq,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_heard_PipeOut_first,
// 					    pipes_heard_PipeOut_deq,
// 					    pipes_heard_PipeOut_notEmpty,
// 					    pipes_heard2_PipeOut_first,
// 					    pipes_heard2_PipeOut_notEmpty );
// schedule portalIfc_requests_1_notFull  SB ( portalIfc_requests_1_enq,
// 					    pipes_heard2_PipeOut_deq );
//
// schedule portalIfc_intr_status  CF ( portalIfc_messageSize_size,
// 				     portalIfc_requests_0_enq,
// 				     portalIfc_requests_0_notFull,
// 				     portalIfc_requests_1_enq,
// 				     portalIfc_requests_1_notFull,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel,
// 				     pipes_heard_PipeOut_first,
// 				     pipes_heard_PipeOut_deq,
// 				     pipes_heard_PipeOut_notEmpty,
// 				     pipes_heard2_PipeOut_first,
// 				     pipes_heard2_PipeOut_deq,
// 				     pipes_heard2_PipeOut_notEmpty );
//
// schedule portalIfc_intr_channel  CF ( portalIfc_messageSize_size,
// 				      portalIfc_requests_0_enq,
// 				      portalIfc_requests_0_notFull,
// 				      portalIfc_requests_1_enq,
// 				      portalIfc_requests_1_notFull,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel,
// 				      pipes_heard_PipeOut_first,
// 				      pipes_heard_PipeOut_deq,
// 				      pipes_heard_PipeOut_notEmpty,
// 				      pipes_heard2_PipeOut_first,
// 				      pipes_heard2_PipeOut_deq,
// 				      pipes_heard2_PipeOut_notEmpty );
//
// schedule pipes_heard_PipeOut_first  CF ( portalIfc_messageSize_size,
// 					 portalIfc_requests_0_enq,
// 					 portalIfc_requests_0_notFull,
// 					 portalIfc_requests_1_enq,
// 					 portalIfc_requests_1_notFull,
// 					 portalIfc_intr_status,
// 					 portalIfc_intr_channel,
// 					 pipes_heard_PipeOut_first,
// 					 pipes_heard_PipeOut_notEmpty,
// 					 pipes_heard2_PipeOut_first,
// 					 pipes_heard2_PipeOut_deq,
// 					 pipes_heard2_PipeOut_notEmpty );
// schedule pipes_heard_PipeOut_first  SB ( pipes_heard_PipeOut_deq );
//
// schedule pipes_heard_PipeOut_deq  CF ( portalIfc_messageSize_size,
// 				       portalIfc_requests_1_enq,
// 				       portalIfc_requests_1_notFull,
// 				       portalIfc_intr_status,
// 				       portalIfc_intr_channel,
// 				       pipes_heard2_PipeOut_first,
// 				       pipes_heard2_PipeOut_deq,
// 				       pipes_heard2_PipeOut_notEmpty );
// schedule pipes_heard_PipeOut_deq  C ( pipes_heard_PipeOut_deq );
//
// schedule pipes_heard_PipeOut_notEmpty  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_enq,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_heard_PipeOut_first,
// 					    pipes_heard_PipeOut_notEmpty,
// 					    pipes_heard2_PipeOut_first,
// 					    pipes_heard2_PipeOut_deq,
// 					    pipes_heard2_PipeOut_notEmpty );
// schedule pipes_heard_PipeOut_notEmpty  SB ( portalIfc_requests_0_enq,
// 					    pipes_heard_PipeOut_deq );
//
// schedule pipes_heard2_PipeOut_first  CF ( portalIfc_messageSize_size,
// 					  portalIfc_requests_0_enq,
// 					  portalIfc_requests_0_notFull,
// 					  portalIfc_requests_1_enq,
// 					  portalIfc_requests_1_notFull,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel,
// 					  pipes_heard_PipeOut_first,
// 					  pipes_heard_PipeOut_deq,
// 					  pipes_heard_PipeOut_notEmpty,
// 					  pipes_heard2_PipeOut_first,
// 					  pipes_heard2_PipeOut_notEmpty );
// schedule pipes_heard2_PipeOut_first  SB ( pipes_heard2_PipeOut_deq );
//
// schedule pipes_heard2_PipeOut_deq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_0_enq,
// 					portalIfc_requests_0_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_heard_PipeOut_first,
// 					pipes_heard_PipeOut_deq,
// 					pipes_heard_PipeOut_notEmpty );
// schedule pipes_heard2_PipeOut_deq  C ( pipes_heard2_PipeOut_deq );
//
// schedule pipes_heard2_PipeOut_notEmpty  CF ( portalIfc_messageSize_size,
// 					     portalIfc_requests_0_enq,
// 					     portalIfc_requests_0_notFull,
// 					     portalIfc_requests_1_notFull,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel,
// 					     pipes_heard_PipeOut_first,
// 					     pipes_heard_PipeOut_deq,
// 					     pipes_heard_PipeOut_notEmpty,
// 					     pipes_heard2_PipeOut_first,
// 					     pipes_heard2_PipeOut_notEmpty );
// schedule pipes_heard2_PipeOut_notEmpty  SB ( portalIfc_requests_1_enq,
// 					     pipes_heard2_PipeOut_deq );
//
//
// Ports:
// Name                         I/O  size props
// portalIfc_messageSize_size     O    16 const
// RDY_portalIfc_messageSize_size  O     1 const
// RDY_portalIfc_requests_0_enq   O     1 reg
// portalIfc_requests_0_notFull   O     1 reg
// RDY_portalIfc_requests_0_notFull  O     1 const
// RDY_portalIfc_requests_1_enq   O     1 reg
// portalIfc_requests_1_notFull   O     1 reg
// RDY_portalIfc_requests_1_notFull  O     1 const
// portalIfc_intr_status          O     1 const
// RDY_portalIfc_intr_status      O     1 const
// portalIfc_intr_channel         O    32 const
// RDY_portalIfc_intr_channel     O     1 const
// pipes_heard_PipeOut_first      O    32 reg
// RDY_pipes_heard_PipeOut_first  O     1 reg
// RDY_pipes_heard_PipeOut_deq    O     1 reg
// pipes_heard_PipeOut_notEmpty   O     1 reg
// RDY_pipes_heard_PipeOut_notEmpty  O     1 const
// pipes_heard2_PipeOut_first     O    32 reg
// RDY_pipes_heard2_PipeOut_first  O     1 reg
// RDY_pipes_heard2_PipeOut_deq   O     1 reg
// pipes_heard2_PipeOut_notEmpty  O     1 reg
// RDY_pipes_heard2_PipeOut_notEmpty  O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// portalIfc_messageSize_size_methodNumber  I    16 unused
// portalIfc_requests_0_enq_v     I    32 reg
// portalIfc_requests_1_enq_v     I    32 reg
// EN_portalIfc_requests_0_enq    I     1
// EN_portalIfc_requests_1_enq    I     1
// EN_pipes_heard_PipeOut_deq     I     1
// EN_pipes_heard2_PipeOut_deq    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkEchoIndicationInput(CLK,
			     RST_N,

			     portalIfc_messageSize_size_methodNumber,
			     portalIfc_messageSize_size,
			     RDY_portalIfc_messageSize_size,

			     portalIfc_requests_0_enq_v,
			     EN_portalIfc_requests_0_enq,
			     RDY_portalIfc_requests_0_enq,

			     portalIfc_requests_0_notFull,
			     RDY_portalIfc_requests_0_notFull,

			     portalIfc_requests_1_enq_v,
			     EN_portalIfc_requests_1_enq,
			     RDY_portalIfc_requests_1_enq,

			     portalIfc_requests_1_notFull,
			     RDY_portalIfc_requests_1_notFull,

			     portalIfc_intr_status,
			     RDY_portalIfc_intr_status,

			     portalIfc_intr_channel,
			     RDY_portalIfc_intr_channel,

			     pipes_heard_PipeOut_first,
			     RDY_pipes_heard_PipeOut_first,

			     EN_pipes_heard_PipeOut_deq,
			     RDY_pipes_heard_PipeOut_deq,

			     pipes_heard_PipeOut_notEmpty,
			     RDY_pipes_heard_PipeOut_notEmpty,

			     pipes_heard2_PipeOut_first,
			     RDY_pipes_heard2_PipeOut_first,

			     EN_pipes_heard2_PipeOut_deq,
			     RDY_pipes_heard2_PipeOut_deq,

			     pipes_heard2_PipeOut_notEmpty,
			     RDY_pipes_heard2_PipeOut_notEmpty);
  input  CLK;
  input  RST_N;

  // value method portalIfc_messageSize_size
  input  [15 : 0] portalIfc_messageSize_size_methodNumber;
  output [15 : 0] portalIfc_messageSize_size;
  output RDY_portalIfc_messageSize_size;

  // action method portalIfc_requests_0_enq
  input  [31 : 0] portalIfc_requests_0_enq_v;
  input  EN_portalIfc_requests_0_enq;
  output RDY_portalIfc_requests_0_enq;

  // value method portalIfc_requests_0_notFull
  output portalIfc_requests_0_notFull;
  output RDY_portalIfc_requests_0_notFull;

  // action method portalIfc_requests_1_enq
  input  [31 : 0] portalIfc_requests_1_enq_v;
  input  EN_portalIfc_requests_1_enq;
  output RDY_portalIfc_requests_1_enq;

  // value method portalIfc_requests_1_notFull
  output portalIfc_requests_1_notFull;
  output RDY_portalIfc_requests_1_notFull;

  // value method portalIfc_intr_status
  output portalIfc_intr_status;
  output RDY_portalIfc_intr_status;

  // value method portalIfc_intr_channel
  output [31 : 0] portalIfc_intr_channel;
  output RDY_portalIfc_intr_channel;

  // value method pipes_heard_PipeOut_first
  output [31 : 0] pipes_heard_PipeOut_first;
  output RDY_pipes_heard_PipeOut_first;

  // action method pipes_heard_PipeOut_deq
  input  EN_pipes_heard_PipeOut_deq;
  output RDY_pipes_heard_PipeOut_deq;

  // value method pipes_heard_PipeOut_notEmpty
  output pipes_heard_PipeOut_notEmpty;
  output RDY_pipes_heard_PipeOut_notEmpty;

  // value method pipes_heard2_PipeOut_first
  output [31 : 0] pipes_heard2_PipeOut_first;
  output RDY_pipes_heard2_PipeOut_first;

  // action method pipes_heard2_PipeOut_deq
  input  EN_pipes_heard2_PipeOut_deq;
  output RDY_pipes_heard2_PipeOut_deq;

  // value method pipes_heard2_PipeOut_notEmpty
  output pipes_heard2_PipeOut_notEmpty;
  output RDY_pipes_heard2_PipeOut_notEmpty;

  // signals for module outputs
  wire [31 : 0] pipes_heard2_PipeOut_first,
		pipes_heard_PipeOut_first,
		portalIfc_intr_channel;
  wire [15 : 0] portalIfc_messageSize_size;
  wire RDY_pipes_heard2_PipeOut_deq,
       RDY_pipes_heard2_PipeOut_first,
       RDY_pipes_heard2_PipeOut_notEmpty,
       RDY_pipes_heard_PipeOut_deq,
       RDY_pipes_heard_PipeOut_first,
       RDY_pipes_heard_PipeOut_notEmpty,
       RDY_portalIfc_intr_channel,
       RDY_portalIfc_intr_status,
       RDY_portalIfc_messageSize_size,
       RDY_portalIfc_requests_0_enq,
       RDY_portalIfc_requests_0_notFull,
       RDY_portalIfc_requests_1_enq,
       RDY_portalIfc_requests_1_notFull,
       pipes_heard2_PipeOut_notEmpty,
       pipes_heard_PipeOut_notEmpty,
       portalIfc_intr_status,
       portalIfc_requests_0_notFull,
       portalIfc_requests_1_notFull;

  // register heard2_requestAdapter_fbnbuff
  reg [31 : 0] heard2_requestAdapter_fbnbuff;
  wire [31 : 0] heard2_requestAdapter_fbnbuff_D_IN;
  wire heard2_requestAdapter_fbnbuff_EN;

  // register heard_requestAdapter_fbnbuff
  reg [31 : 0] heard_requestAdapter_fbnbuff;
  wire [31 : 0] heard_requestAdapter_fbnbuff_D_IN;
  wire heard_requestAdapter_fbnbuff_EN;

  // ports of submodule heard2_requestAdapter_fifo
  wire [31 : 0] heard2_requestAdapter_fifo_D_IN,
		heard2_requestAdapter_fifo_D_OUT;
  wire heard2_requestAdapter_fifo_CLR,
       heard2_requestAdapter_fifo_DEQ,
       heard2_requestAdapter_fifo_EMPTY_N,
       heard2_requestAdapter_fifo_ENQ,
       heard2_requestAdapter_fifo_FULL_N;

  // ports of submodule heard_requestAdapter_fifo
  wire [31 : 0] heard_requestAdapter_fifo_D_IN,
		heard_requestAdapter_fifo_D_OUT;
  wire heard_requestAdapter_fifo_CLR,
       heard_requestAdapter_fifo_DEQ,
       heard_requestAdapter_fifo_EMPTY_N,
       heard_requestAdapter_fifo_ENQ,
       heard_requestAdapter_fifo_FULL_N;

  // value method portalIfc_messageSize_size
  assign portalIfc_messageSize_size = 16'd32 ;
  assign RDY_portalIfc_messageSize_size = 1'd1 ;

  // action method portalIfc_requests_0_enq
  assign RDY_portalIfc_requests_0_enq = heard_requestAdapter_fifo_FULL_N ;

  // value method portalIfc_requests_0_notFull
  assign portalIfc_requests_0_notFull = heard_requestAdapter_fifo_FULL_N ;
  assign RDY_portalIfc_requests_0_notFull = 1'd1 ;

  // action method portalIfc_requests_1_enq
  assign RDY_portalIfc_requests_1_enq = heard2_requestAdapter_fifo_FULL_N ;

  // value method portalIfc_requests_1_notFull
  assign portalIfc_requests_1_notFull = heard2_requestAdapter_fifo_FULL_N ;
  assign RDY_portalIfc_requests_1_notFull = 1'd1 ;

  // value method portalIfc_intr_status
  assign portalIfc_intr_status = 1'd0 ;
  assign RDY_portalIfc_intr_status = 1'd1 ;

  // value method portalIfc_intr_channel
  assign portalIfc_intr_channel = 32'hFFFFFFFF ;
  assign RDY_portalIfc_intr_channel = 1'd1 ;

  // value method pipes_heard_PipeOut_first
  assign pipes_heard_PipeOut_first = heard_requestAdapter_fifo_D_OUT ;
  assign RDY_pipes_heard_PipeOut_first = heard_requestAdapter_fifo_EMPTY_N ;

  // action method pipes_heard_PipeOut_deq
  assign RDY_pipes_heard_PipeOut_deq = heard_requestAdapter_fifo_EMPTY_N ;

  // value method pipes_heard_PipeOut_notEmpty
  assign pipes_heard_PipeOut_notEmpty = heard_requestAdapter_fifo_EMPTY_N ;
  assign RDY_pipes_heard_PipeOut_notEmpty = 1'd1 ;

  // value method pipes_heard2_PipeOut_first
  assign pipes_heard2_PipeOut_first = heard2_requestAdapter_fifo_D_OUT ;
  assign RDY_pipes_heard2_PipeOut_first = heard2_requestAdapter_fifo_EMPTY_N ;

  // action method pipes_heard2_PipeOut_deq
  assign RDY_pipes_heard2_PipeOut_deq = heard2_requestAdapter_fifo_EMPTY_N ;

  // value method pipes_heard2_PipeOut_notEmpty
  assign pipes_heard2_PipeOut_notEmpty = heard2_requestAdapter_fifo_EMPTY_N ;
  assign RDY_pipes_heard2_PipeOut_notEmpty = 1'd1 ;

  // submodule heard2_requestAdapter_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(1'd1)) heard2_requestAdapter_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(heard2_requestAdapter_fifo_D_IN),
						     .ENQ(heard2_requestAdapter_fifo_ENQ),
						     .DEQ(heard2_requestAdapter_fifo_DEQ),
						     .CLR(heard2_requestAdapter_fifo_CLR),
						     .D_OUT(heard2_requestAdapter_fifo_D_OUT),
						     .FULL_N(heard2_requestAdapter_fifo_FULL_N),
						     .EMPTY_N(heard2_requestAdapter_fifo_EMPTY_N));

  // submodule heard_requestAdapter_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(1'd1)) heard_requestAdapter_fifo(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(heard_requestAdapter_fifo_D_IN),
						    .ENQ(heard_requestAdapter_fifo_ENQ),
						    .DEQ(heard_requestAdapter_fifo_DEQ),
						    .CLR(heard_requestAdapter_fifo_CLR),
						    .D_OUT(heard_requestAdapter_fifo_D_OUT),
						    .FULL_N(heard_requestAdapter_fifo_FULL_N),
						    .EMPTY_N(heard_requestAdapter_fifo_EMPTY_N));

  // register heard2_requestAdapter_fbnbuff
  assign heard2_requestAdapter_fbnbuff_D_IN = portalIfc_requests_1_enq_v ;
  assign heard2_requestAdapter_fbnbuff_EN = EN_portalIfc_requests_1_enq ;

  // register heard_requestAdapter_fbnbuff
  assign heard_requestAdapter_fbnbuff_D_IN = portalIfc_requests_0_enq_v ;
  assign heard_requestAdapter_fbnbuff_EN = EN_portalIfc_requests_0_enq ;

  // submodule heard2_requestAdapter_fifo
  assign heard2_requestAdapter_fifo_D_IN = portalIfc_requests_1_enq_v ;
  assign heard2_requestAdapter_fifo_ENQ = EN_portalIfc_requests_1_enq ;
  assign heard2_requestAdapter_fifo_DEQ = EN_pipes_heard2_PipeOut_deq ;
  assign heard2_requestAdapter_fifo_CLR = 1'b0 ;

  // submodule heard_requestAdapter_fifo
  assign heard_requestAdapter_fifo_D_IN = portalIfc_requests_0_enq_v ;
  assign heard_requestAdapter_fifo_ENQ = EN_portalIfc_requests_0_enq ;
  assign heard_requestAdapter_fifo_DEQ = EN_pipes_heard_PipeOut_deq ;
  assign heard_requestAdapter_fifo_CLR = 1'b0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        heard2_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	heard_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (heard2_requestAdapter_fbnbuff_EN)
	  heard2_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY
	      heard2_requestAdapter_fbnbuff_D_IN;
	if (heard_requestAdapter_fbnbuff_EN)
	  heard_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY
	      heard_requestAdapter_fbnbuff_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    heard2_requestAdapter_fbnbuff = 32'hAAAAAAAA;
    heard_requestAdapter_fbnbuff = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkEchoIndicationInput

